if [[ -x `which git` ]]; then
 
	alias g=git
	alias gd='git diff'
	alias gs='git status'
  function glogshort (){
    git log $1..HEAD --pretty='%h - %an - %s' --no-merges
  }
  function gweeklog (){
    git log --format='%cD - %aN - %s' --author=$1 --after='10 days' --no-merges --reverse
  }
	function git-branch-name () {
		git branch 2> /dev/null | grep '^\*' | sed 's/^\*\ //'
	}
	function git-dirty () {
		git status 2> /dev/null | grep "nothing to commit (working directory clean)"
		echo $?
	}
	function gsrb () {
		branch=$(git-branch-name) 
		git checkout master
		git svn rebase
		git checkout "${branch}"
		git rebase master
	}
	function git-prompt() {
		gstatus=$(git status 2> /dev/null)
		branch=$(echo $gstatus | head -1 | sed 's/^# On branch //')
		dirty=$(echo $gstatus | sed 's/^#.*$//' | tail -2 | grep 'nothing to commit (working directory clean)'; echo $?)
		ahead=$(echo $gstatus | head -2 | grep -c 'ahead')
		behind=$(echo $gstatus | head -2 | grep -c 'behind')
		diverged=$(echo $gstatus | head -2 | grep -c 'diverged')
		if [[ x$branch != x ]]; then
			indicator=""
			dirty_color=$fg[green]
			if [[ $dirty		= 1 ]] { dirty_color=$fg[magenta]; indicator="☠" }
			if [[ $ahead		= 1 ]] { indicator="↑" }
			if [[ $behind		= 1 ]] { indicator="↓" }
			if [[ $diverged = 1 ]] { indicator="↕" }
			[ x$branch != x ] && echo " - %{$dirty_color%}$branch%{$reset_color%} $indicator"
		fi
	}
	# similar to the above, but without checking to see if the branch is dirty
	function git-prompt-lite() {
		ref=$(git-symbolic-ref HEAD 2> /dev/null) || return
		echo " %{$fg[cyan]%}${ref#refs/heads/}%{$reset_color%}"
	}
 
	function git-scoreboard () {
		git log | grep Author | sort | uniq -ci | sort -r
	}
	function git-track () {
		branch=$(git-branch-name)
		git config branch.$branch.remote origin
		git config branch.$branch.merge refs/heads/$branch
		echo "tracking origin/$tracking"
	}
	function github-init () {
		git config branch.$(git-branch-name).remote origin
		git config branch.$(git-branch-name).merge refs/heads/$(git-branch-name)
	}
 
	function github-url () {
		git config remote.origin.url | sed -En 's/git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'
	}
 
	# Seems to be the best OS X jump-to-github alias from http://tinyurl.com/2mtncf
	function github-go () {
		open $(github-url)
	}
 
	function nhgk () {
		nohup gitk --all &
	}
fi

PAIR_AUTHOR_JOSEPH="Joseph Halter"
PAIR_AUTHOR_JONATHAN="Jonathan Tron"
PAIR_AUTHOR_GUILLAUME="Guillaume Hain"

pair() {
  local name email args initials author ret write
  name=""
  email="dev"
  if [ -n "$ZSH_VERSION" ]; then
    args=(${(i)@})
  else
    args="`for arg in "$@"; do echo "x$arg"|sed -e 's/^x//'|tr ' ' _; done|sort`"
  fi
  for arg in $args; do
    initials=
    author=
    case "x$arg" in
      x-u) ret=unsetenv; continue ;;
      x-w) write=1;      continue ;;
      x-*) echo "Unknown option $arg" >&2; exit 1 ;;
      x*=*)
      initials="`echo "$arg"|sed -e s/=.*//`"
      author="`echo "$arg"|sed -e s/[^=]*=//|tr _ ' '`"
      ;;
      [^-]*)
      initials="`echo "$arg"|tr a-z A-Z`"
      eval "author=\"\$PAIR_AUTHOR_$initials\""
      ;;
    esac
    if [ -z "$author" ]; then
      echo "Invalid id $arg" >&2
      return 1
    fi
    name="$name and $author"
    email="$email+`echo "$initials"|tr A-Z a-z`"
  done
  name="`echo $name|sed -e 's/^ *and *//'`"
  email="$email@kneip.com"
  case "$ret" in
    unsetenv) unset GIT_AUTHOR_NAME GIT_AUTHOR_EMAIL
      [ ! -n "$write" ] || rm -f "$HOME/.pairrc"
    ;;
    *)
    if [ "" = "$name" ]; then
      if [ -n "$write" ]; then
        unset GIT_AUTHOR_NAME GIT_AUTHOR_EMAIL
        rm -f "$HOME/.pairrc"
      elif [ -n "$GIT_AUTHOR_NAME" ]; then
        echo "$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"
      else
        return 1
      fi
    else
      export GIT_AUTHOR_NAME="$name" GIT_AUTHOR_EMAIL="$email"
      echo "$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"
      if [ -n "$write" ]; then
        rm -f "$HOME/.pairrc"
        echo "pair `echo "$@"|sed -e 's/-w //'`" > "$HOME/.pairrc"
      fi
    fi ;;
  esac
}
[ -n "$GIT_AUTHOR_EMAIL" -o ! -f "$HOME/.pairrc" ] || . "$HOME/.pairrc"